import { join } from 'path'

import MiniCssExtractPlugin from 'mini-css-extract-plugin'

import { isProd, rootDir, webpackDir } from '../utils/env'

export const cssLoader = {
  loader: 'css-loader',
}

export const postCssLoader = {
  loader: 'postcss-loader',
  options: {
    postcssOptions: {
      config: join(webpackDir, './config/postcss.js'),
    },
    sourceMap: true,
  },
}

/** *
 * Using MiniCssExtractPlugin in production or style-loader in development
 * @see https://webpack.js.org/plugins/mini-css-extract-plugin/#root
 * @see https://webpack.js.org/loaders/style-loader/#root
 */
export const miniCssExtractLoader = isProd
  ? {
      loader: MiniCssExtractPlugin.loader,
      options: {
        esModule: false,
      },
    }
  : {
      loader: 'style-loader',
      options: {
        esModule: false,
      },
    }

/**
 * @see https://webpack.js.org/loaders/less-loader/#root
 */
export const lessLoader = {
  loader: 'less-loader',
  options: {
    sourceMap: true,
    lessOptions: {
      globalVars: {
        'border-color': 'rgba(34,36,38,.15)',
      },
      modifyVars: {
        'primary-color': '#12b89a',
      },
      javascriptEnabled: true,
    },
  },
}

export const typingsCssModulesLoader = {
  loader: '@teamsupercell/typings-for-css-modules-loader',
  options: {
    banner:
      '// autogenerated by typings-for-css-modules-loader. \n// Please do not change this file!',
    formatter: 'prettier',
  },
}

export const resolveUrlLoader = {
  loader: 'resolve-url-loader',
  options: {
    sourceMap: true,
  },
}

export const babelLoader = {
  loader: 'babel-loader',
  options: {
    configFile: join(rootDir, '/.babelrc.js'),
  },
}

export const cssModulesSupportLoaderItems = [
  miniCssExtractLoader,
  typingsCssModulesLoader,
  {
    ...cssLoader,
    options: {
      esModule: false,
      modules: {
        exportLocalsConvention: 'camelCaseOnly',
        localIdentName: '[local]__[contenthash:base64:5]',
      },
    },
  },
]

export const cssLoaderItems = [miniCssExtractLoader, cssLoader]
